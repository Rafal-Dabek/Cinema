{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rafa\\u0142\\\\Documents\\\\GitHub\\\\Cinema\\\\cinema\\\\src\\\\Components\\\\Homepage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport \"./FormInput\";\nimport FormInput from './FormInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    mail: \"\",\n    password: \"\",\n    emailValid: false,\n    passwordValid: false,\n    formValid: false\n  });\n  const inputs = [{\n    id: 1,\n    name: \"mail\",\n    type: \"email\",\n    placeholder: \"Something ending with monterail.com\",\n    label: \"Mail\",\n    pattern: \".+@monterail.com\",\n    required: true,\n    onkeyup: {\n      handleValidation\n    }\n  }, {\n    id: 2,\n    name: \"password\",\n    type: \"password\",\n    placeholder: \"Enter your password\",\n    label: \"Password\"\n  }];\n\n  let validateField = (fieldName, values) => {\n    let emailValid = values.emailValid;\n    let passwordValid = values.passwordValid;\n\n    switch (fieldName) {\n      case 'mail':\n        emailValid = values.password.match(\".+@monterail.com\");\n        console.log(emailValid);\n        break;\n\n      case 'password':\n        passwordValid = values.password.length >= 6;\n        break;\n\n      default:\n        break;\n    }\n\n    setValues({\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    });\n  };\n\n  let validateForm = () => {\n    this.setState({\n      formValid: this.state.emailValid && this.state.passwordValid\n    });\n  };\n\n  handleValidation(evnt);\n  {\n    const passwordInputValue = evnt.target.value.trim();\n    const passwordInputFieldName = evnt.target.name; //for password \n\n    if (passwordInputFieldName === 'password') {\n      const uppercaseRegExp = /(?=.*?[A-Z])/;\n      const lowercaseRegExp = /(?=.*?[a-z])/;\n      const digitsRegExp = /(?=.*?[0-9])/;\n      const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\n      const minLengthRegExp = /.{8,}/;\n      const passwordLength = passwordInputValue.length;\n      const uppercasePassword = uppercaseRegExp.test(passwordInputValue);\n      const lowercasePassword = lowercaseRegExp.test(passwordInputValue);\n      const digitsPassword = digitsRegExp.test(passwordInputValue);\n      const specialCharPassword = specialCharRegExp.test(passwordInputValue);\n      const minLengthPassword = minLengthRegExp.test(passwordInputValue);\n      let errMsg = \"\";\n\n      if (passwordLength === 0) {\n        errMsg = \"Password is empty\";\n      } else if (!uppercasePassword) {\n        errMsg = \"At least one Uppercase\";\n      } else if (!lowercasePassword) {\n        errMsg = \"At least one Lowercase\";\n      } else if (!digitsPassword) {\n        errMsg = \"At least one digit\";\n      } else if (!specialCharPassword) {\n        errMsg = \"At least one Special Characters\";\n      } else if (!minLengthPassword) {\n        errMsg = \"At least minumum 8 characters\";\n      } else {\n        errMsg = \"\";\n      }\n    }\n  }\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    });\n    validateField(values.mail, values);\n  }; //let data=inputs.value\n  // console.log(data)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"darkSentence\",\n      children: \"Ahoy you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"graySentence\",\n      children: \"Care to register?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      id: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, { ...input,\n          value: values[input.name],\n          onChange: onChange\n        }, input.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helper\",\n          id: \"charakters\",\n          children: \"At least 8 characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helper\",\n          id: \"letter\",\n          children: \"At least one letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"helper\",\n          id: \"digit\",\n          children: \"At least one digit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"logIn\",\n            children: \"Log in instead\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/SecondStep\",\n            state: values,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"nextStep\",\n              type: \"submit\",\n              disabled: !values.formValid,\n              children: \" Next step\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HomePage, \"I0v9KlL3/1C0M+lBjfRLgbvlqlU=\");\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","Component","useState","Link","FormInput","HomePage","values","setValues","mail","password","emailValid","passwordValid","formValid","inputs","id","name","type","placeholder","label","pattern","required","onkeyup","handleValidation","validateField","fieldName","match","console","log","length","validateForm","setState","state","evnt","passwordInputValue","target","value","trim","passwordInputFieldName","uppercaseRegExp","lowercaseRegExp","digitsRegExp","specialCharRegExp","minLengthRegExp","passwordLength","uppercasePassword","test","lowercasePassword","digitsPassword","specialCharPassword","minLengthPassword","errMsg","onChange","e","map","input"],"sources":["C:/Users/RafaÅ‚/Documents/GitHub/Cinema/cinema/src/Components/Homepage.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport  { useState} from 'react';\r\nimport {Link } from \"react-router-dom\";\r\nimport \"./style.css\"\r\nimport \"./FormInput\"\r\nimport FormInput from './FormInput';\r\nexport const HomePage=()=>{\r\n    const [values,setValues]=useState({\r\n        mail:\"\",\r\n        password:\"\",\r\n        emailValid: false,\r\n        passwordValid: false,\r\n        formValid: false\r\n\r\n    })\r\n\r\nconst inputs=[\r\n    {\r\n        id:1,\r\n        name:\"mail\",\r\n        type:\"email\",\r\n        placeholder:\"Something ending with monterail.com\",\r\n        label:\"Mail\",\r\n        pattern:\".+@monterail.com\",\r\n        required:true,\r\n        onkeyup:{handleValidation}\r\n    },\r\n    {\r\n        id:2,\r\n        name:\"password\",\r\n        type:\"password\",\r\n        placeholder:\"Enter your password\",\r\n        label:\"Password\"\r\n    }\r\n]\r\n\r\nlet validateField=(fieldName, values) =>{\r\n    \r\n    let emailValid = values.emailValid;\r\n    let passwordValid = values.passwordValid;\r\n  \r\n    switch(fieldName) {\r\n      case 'mail':\r\n        emailValid = values.password.match(\".+@monterail.com\")\r\n        console.log(emailValid)\r\n        break;\r\n      case 'password':\r\n        passwordValid = values.password.length >= 6;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setValues({\r\n                    emailValid: emailValid,\r\n                    passwordValid: passwordValid\r\n                  });\r\n  }\r\n  \r\n let validateForm=()=> {\r\n    this.setState({formValid: this.state.emailValid && this.state.passwordValid})\r\n  }\r\n\r\n  handleValidation (evnt) ;{\r\n    const passwordInputValue = evnt.target.value.trim();\r\n    const passwordInputFieldName = evnt.target.name;\r\n        //for password \r\nif(passwordInputFieldName==='password'){\r\n    const uppercaseRegExp   = /(?=.*?[A-Z])/;\r\n    const lowercaseRegExp   = /(?=.*?[a-z])/;\r\n    const digitsRegExp      = /(?=.*?[0-9])/;\r\n    const specialCharRegExp = /(?=.*?[#?!@$%^&*-])/;\r\n    const minLengthRegExp   = /.{8,}/;\r\n    const passwordLength =      passwordInputValue.length;\r\n    const uppercasePassword =   uppercaseRegExp.test(passwordInputValue);\r\n    const lowercasePassword =   lowercaseRegExp.test(passwordInputValue);\r\n    const digitsPassword =      digitsRegExp.test(passwordInputValue);\r\n    const specialCharPassword = specialCharRegExp.test(passwordInputValue);\r\n    const minLengthPassword =   minLengthRegExp.test(passwordInputValue);\r\n    let errMsg =\"\";\r\n    if(passwordLength===0){\r\n            errMsg=\"Password is empty\";\r\n    }else if(!uppercasePassword){\r\n            errMsg=\"At least one Uppercase\";\r\n    }else if(!lowercasePassword){\r\n            errMsg=\"At least one Lowercase\";\r\n    }else if(!digitsPassword){\r\n            errMsg=\"At least one digit\";\r\n    }else if(!specialCharPassword){\r\n            errMsg=\"At least one Special Characters\";\r\n    }else if(!minLengthPassword){\r\n            errMsg=\"At least minumum 8 characters\";\r\n    }else{\r\n        errMsg=\"\";\r\n    }\r\n}\r\n  }\r\n\r\n\r\nconst onChange=(e)=>{\r\n    setValues({...values,[e.target.name]:e.target.value})\r\n    validateField(values.mail,values)\r\n}\r\n   //let data=inputs.value\r\n   // console.log(data)\r\n    return(\r\n        <div className='container'>\r\n           <p id='darkSentence'>Ahoy you!</p> \r\n           <p id='graySentence'>Care to register?</p> \r\n            <div className='card' id='card'>\r\n                \r\n                \r\n                \r\n                <form>\r\n                    {inputs.map((input)=>(\r\n                        <FormInput key={input.id}\r\n                         {...input} \r\n                        value={values[input.name]} \r\n                         onChange={onChange}\r\n                         />\r\n\r\n                    ))}\r\n                    <p className='helper' id='charakters'>At least 8 characters</p>\r\n                    <p className='helper' id='letter'>At least one letter</p>\r\n                    <p className='helper' id='digit'>At least one digit</p>\r\n                    <div className='buttonDiv'>\r\n                    <button className='logIn'>Log in instead</button>\r\n                    <Link to=\"/SecondStep\" state={values}>\r\n                    <button className='nextStep' type=\"submit\" disabled={!values.formValid} > Next step</button>\r\n                    </Link>\r\n                    </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}